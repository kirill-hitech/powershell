 
 #1.
 # При вводе кол-ва кубических футов, отображается кол-во галлонов.

 [int32]$value = Read-Host "Введите количество куб. футов"
 [Single]$g = 7.481
 [Single]$new = $value * $g 
 Write-host $new "галлона"

 # При вводе кол-ва галлонов, отображается кол-во кубических футов.
 
 [int32]$value1 = Read-Host "введите количество галлонов"
 [Single]$g1 = 7.481
 [Single]$new1 = $value1 / $g1 
 Write-host $new1 "кубических футов"
 
 # Была идея сделать зациклинный запрос, используя цикл с continue....
 
 
for ($b = 7.481; $i -ne 0;) # не обязательно использовать  всю структуру цикла -> ($i = 1; $i -lt 99; $i++) ??
{
        [int32]$i = Read-Host "Do you want to change value" 
        Write-Host ($i/$b) "кубических футов"
}


while ($x -ne 0){$x = Read-Host "Do you want to change value";Write-host ($x / 7.481) "кубических футов"}
 

 #2. `t Встретив этот символ, терминал перемещает каретку (или курсор) вправо на ближайшую позицию табуляции
"13`t`t1991`n7290`t1990`n11300`t1992`n16200`t1993"

 #3.
 function show-money{ param ($Dollars=0)  
  [String]$output = ($Dollars/1.487).ToString()+"`tфунт`n`r"+($Dollars / 0.172).ToString()+"`tфранк`n`r"+($Dollars / 0.584).ToString()+"`tмарка`n"+($Dollars / 0.00995).ToString()+"`tйен`n"# почему присутствует пробел в других значениях?
  Write-Host $output
  
}
show-money

#4.
function degrees { param ($Celsium)
write-host ($Celsium*9/5-32) "по Фаренгейту"
} 
degrees -Celsium (Read-Host "градусы по Цельсию")

#5

<#
Старая система £5.2.8 
  1 фунт - 20 шиллингам
  1 шиллинг — 12 пенсам
  1 фунт = 20*12 = 240 пенсам

Новая система £5.13
1 фунт - 100 пенсам

Вот на примерах как раз:
5.2.8 = 5.0.(2*12+8) = 5.0.32 - в старой системе = 5.(32/2.4) = 5.13 - в новой.
7.17.9 = 7.0.213 - в старой = 7.(213/2.4)=7.~89 - в новой.
#>

# исправить самостоятельно:

function money{
[Char]$a=163 # символ фунта 
$text = "Введите ĸоличество " # общий текст
[int32]$funt=Read-Host ($text+"фунтов") # читаем фунты из консоли
[int32]$shilling=Read-Host ($text+"шиллингов") # читаем шиллинги из консоли
[int32]$pens=Read-Host ($text+"пенсов") # читаем пенсы из консоли
[double]$per=(20*12)/100 #считает соотношение стоимости фунта между новой и старой системой исчисления
[double]$sum = (($shilling*12+$pens)/$per)/100 #перевдит шиллинги в пенсы и считает общее количество, переводя в десятичный тип данных
$sum2 = $a+($funt+$sum) #складывает фунты с пенсами и записывает в новом формате исчисления 
Write-Host $sum2 
}

money 

#6
for ($a = 100; $a -le 110; $a++)
{
   Write-host $a
}

#7
$val=99
   while($val -ne 110)
{
    $val++
    Write-Host $val
}

#8 

$x = [int] (Read-Host "Перевести значение по Фаренгейту в Цельсию - нажмите 1`n`rПеревести значение по Цельсию в Фаренгейты - нажмите 2`n`r") # определяется какое из ветвлений будет использовано для расчёта
if($x -eq 1)
{
    [int32]$Celsium= Read-host "Укажите значение по Цельсию"
    [int32]$F=($Celsium*9/5+32)   # переводит значение по Цельсии в Фаренгейты
    write-host $F "`tпо Фаренгейту"
}   
if($x -eq 2)
{
    [int32]$Farengate=Read-host "Укажите значение по Фаренгейту"
    [int32]$C=($Farengate-32)*5/9 # переводит значение по Фаренгейту в Цельсии
    write-host $C "`tпо Цельсию" 
}  
else
{
 break 
 #write-host "Введено неверное значение!"
}

#9
[String[]]$strings = "     x","    xxx","   xxxxx","  xxxxxxx"," xxxxxxxxx" 
$strings

#  как решать задачу?
# нужно понять сперва, зависимость кол-ва звезд от номера строки, и она такая:
# количество_звезд=(номер_строки)*(умножить_на_2)-(отнять_единицу)

$x = [int] (Read-Host "Write number") # ЧТО ЭТО? - количество строк

for($i=1; $i -le $x; $i++){ # Что делает цикл верхнего уровня? каждая итерация - рисует одну строчку пирамиды, начиная сверху
   
   for($k=1; $k -le $x -$i; $k++ ){ # что делает первый вложенный цикл? рисует нужное количество пробелов в текущей строчке
      Write-Host -NoNewLine " "
        }

   for($j=1; $j -le 2 * $i - 1; $j++){ # что делает второй вложенный цикл? рисует нужное количество звездочек в текущей строчке
         Write-Host -NoNewLine "*" 
        }

   Write-Host "`n" -NoNewline # этот коммандлет вызванный без -nonewline добавляет `n по умолчанию
}